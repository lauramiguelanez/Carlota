{"version":3,"sources":["components/constants/landingLanguages.js","components/Navbar.js","components/LandingAnimation.js","components/About.js","components/UploadProject.js","components/Projects.js","components/ProjectDetail.js","components/Footer.js","components/Category.js","App.js","serviceWorker.js","index.js"],"names":["ActionLangList","ObjectLangList","exports","langList","Navbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","loggedInUser","react_default","a","createElement","className","id","role","BrowserRouter","href","Component","LandingAnimation","componentDidMount","setState","actLang","objLang","lang","changeSentence","newPage","randomIndex","Math","floor","random","length","randomSentence","randomAction","randomObject","action","object","setInterval","changeLang","e","i","_this2","onMouseOver","require","config","Footer","sendCategory","category","newFilter","App","page","Navbar_Navbar","Switch","Route","key","exact","path","render","LandingAnimation_LandingAnimation","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.79cfb1dc.chunk.js","sourcesContent":["const actionsENG = [\n    \"I build \",\n    \"I translate \",\n    \"I curate \",\n    \"I question \",\n    \"I research \",\n    \"I write \"\n  ];\n  const objectsENG = [\n    \"architecture\",\n    \"language\",\n    \"art\",\n    \"gender\",\n    \"research\",\n    \"text\"\n  ];\n  \n  const actionsFRN = [\n    \"Je construis \",\n    \"Je traduis \",\n    \"Je cure \",\n    \"Je questionne \",\n    \"Je recherche \",\n    \"J'écris \"\n  ];\n  const objectsFRN = [\n    \"l'architecture\",\n    \"le langage\",\n    \"l'art\",\n    \"le genre\",\n    \"la recherche\",\n    \"des textes\"\n  ];\n  \n  const actionsSPA = [\n    \"Construyo \",\n    \"Traduzco \",\n    \"Comisario \",\n    \"Cuestiono \",\n    \"Investigo \",\n    \"Escribo \"\n  ];\n  const objectsSPA = [\n    \"arquitectura\",\n    \"el lenguaje\",\n    \"el arte\",\n    \"el género\",\n    \"la investigación\",\n    \"textos\"\n  ];\n\n  const actionsSWE = [\n    \"Jag bygger \",\n    \"Jag översätter \",\n    \"Jag [curate]  \",\n    \"Jag ifrågasätter \",\n    \"Jag forskar \",\n    \"Jag skriver \"\n  ];\n  const objectsSWE = [\n    \"arkitektur\",\n    \"språk\",\n    \"konst\",\n    \"kön\",\n    \"forskning\",\n    \"texter\"\n  ];\n  \n  const actionsITA = [\n    \"Costruisco \",\n    \"Traduco \",\n    \"Curo \",\n    \"M'interrogo \",\n    \"Scrivo \",\n    \"Scrivo \"\n  ];\n  const objectsITA = [\n    \"\",\n    \"la lingua\",\n    \"l'arte\",\n    \"sul genere\",\n    \"l'architettura\",\n    \"testi\"\n  ];\n  \n  const actionsCAT = [\n    \"Construeixo \",\n    \"Tradueixo \",\n    \"Comissari \",\n    \"Qüestiono \",\n    \"Investigo \",\n    \"Escric \"\n  ];\n  const objectsCAT = [\n    \"arquitectura\",\n    \"la llengua\",\n    \"l'art\",\n    \"el gènere\",\n    \"l'investigació\",\n    \"textos\"\n  ];\n  \n  const ActionLangList = [actionsENG, actionsFRN, actionsSPA/* , actionsSWE, actionsITA, actionsCAT */];\n  const ObjectLangList = [objectsENG, objectsFRN, objectsSPA/* , objectsSWE, objectsITA, objectsCAT */];\n\n  exports.langList = {ActionLangList, ObjectLangList};","import React, { Component } from \"react\";\nimport { Link, BrowserRouter, NavLink } from \"react-router-dom\";\nimport \"../css/navbar.scss\";\n\nexport default class Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null };\n  }\n\n  render() {\n    return (\n      <nav className=\"nav-style\" id=\"top-nav\" role=\"navigation\">\n        <div className=\"nav-width\">\n          <BrowserRouter>\n            <h2>\n              {/* <NavLink className=\"nav-link\" to=\"/about\">About</NavLink>\n    <NavLink className=\"nav-link\" to=\"/\">Carlota Mir</NavLink> */}\n              <a className=\"nav-link\" href=\"mailto:mir.carlota@gmail.com\">Carlota Mir</a>\n            </h2>\n            {/* <li><NavLink to='/'>Home</NavLink></li>\n                <li><NavLink to='/about'>Carlota</NavLink></li> */}\n          </BrowserRouter>\n        </div>\n      </nav>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n//import { Link } from \"react-router-dom\";\nimport \"../css/landing.scss\";\nimport {langList} from './constants/landingLanguages';\n\nlet {ActionLangList, ObjectLangList} = langList;\n\nexport default class LandingAnimation extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedInUser: null\n    };\n  }\n\n  componentDidMount = () => {\n    this.setState({ actLang: ActionLangList[0], objLang: ObjectLangList[0], lang: 0 });\n    this.changeSentence();\n    this.props.newPage();\n  };\n\n  randomIndex = () => {\n    let i = Math.floor(Math.random() * this.state.actLang.length);\n    return i;\n  };\n\n  randomSentence = () => {\n    let randomAction = this.state.actLang[this.randomIndex()];\n    let randomObject = this.state.objLang[this.randomIndex()];\n    this.setState({ action: randomAction, object: randomObject });\n  };\n\n  changeSentence = () => {\n    setInterval(this.randomSentence, 1700);\n  };\n\n  changeLang = e => {\n    let i = this.state.lang;\n    i<(ActionLangList.length-1)? i++: i=0;\n\n    this.setState({ actLang: ActionLangList[i], objLang: ObjectLangList[i], lang: i });\n  };\n\n  render() {\n    let action = this.state.action;\n    let object = this.state.object;\n\n    return (\n      <section>\n        <div className=\"landing-wrapper\">\n          <div className=\"landing-text\" onMouseOver={e => this.changeLang(e)}>\n            <p className=\"landing-random action\">{action}</p>\n            <p className=\"landing-random object\">{object}</p>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"../css/content.scss\";\n\nexport default class About extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedInUser: null\n    };\n  }\n\n  componentDidMount = () => {\n    //this.props.newPage();\n  };\n\n  render() {\n    return (\n      <section>\n        <p>\n          Carlota Mir (b. Carlota Jerez, Spain, 1991) is a curator, researcher,\n          translator and cultural agent currently based in Stockholm, Sweden.\n          Her work, of a multidisciplinary and multilingual nature, interrogates\n          the relationship between gender, sexuality and space in visual\n          culture, design, curating and architecture. Her research and\n          curatorial work focuses particularly on the notion of domesticity as a\n          political arena from a feminist and queer perspective.\n        </p>\n\n        <p>\n          Carlota currently combines her work as an independent curator in\n          Stockholm with research work as a participant of the research groups\n          Decolonizing Architecture and R-Lab at the Royal Institute of Art in\n          Stockholm. In September 2016, she moved to Sweden upon receiving a\n          scholarship in cultural programming for the Spanish Agency for\n          International Cooperation and Development (AECID) in Stockholm.\n        </p>\n\n        <p>\n          She has curated or is currently curating exhibitions, conferences,\n          editorial work and public programmes for KTH, Kulturhuset, Index\n          Contemporary Arts Foundation, Global Challenges Foundation, EUNIC\n          Stockholm, ETSAM, or Matadero Madrid, amongst others.\n        </p>\n\n        <p>\n          Her individual research work has been published internationally in\n          various academic and independent platforms, such as ETSAM Madrid,\n          Orlando Magazine, and Universidad Autónoma de Madrid. Her work as part\n          of the curatorial team of the architectural platform 255 will be\n          exhibited at the Spanish Pavilion of the 2018 Venice Architecture\n          Biennale and has been exhibited at the Istanbul Biennial of Design,\n          Museo Reina Sofía, COAM, or Matadero Madrid, amongst others.\n        </p>\n\n        <p>\n          Carlota graduated from her BA in Art History and French with Study\n          Abroad Year in 2013 (University of Sussex, Great Britain/Paris\n          Sorbonne IV, France) and she holds an MA in Contemporary Art and\n          Visual Culture from Universidad Autónoma de Madrid/Museo Nacional\n          Reina Sofia.\n        </p>\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nrequire(\"dotenv\").config();\n//import \"../css/forms.scss\";\n\nexport default class UploadProject extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedInUser: null,\n      redirect: false\n    };\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/api`\n    });\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  }\n\n  handleChangeFile(e) {\n    const { name, files } = e.target;\n    this.setState({ file: e.target.files[0] });\n  }\n\n  uploadImage(file, name) {\n    const formData = new FormData();\n    formData.append(\"photo\", file);\n    return this.service\n      .post(\"/uploadCloud\", formData, {\n        headers: { \"Content-Type\": \"multipart/form-data\" }\n      })\n      .then(img => {\n        this.setState({ img_url: img.data.secure_url, redirect: true });\n      })\n      .catch(error => console.log(error));\n  }\n\n  createProject = (\n    image_url,\n    title,\n    subtitle,\n    date,\n    context,\n    organiser,\n    collaboratingEntitites,\n    category,\n    tagsTopic,\n    tagsFormat,\n    description,\n    authorship\n  ) => {\n    //faltan demas datos\n    let project = {\n      coverImage: image_url,\n      title,\n      subtitle,\n      date,\n      context,\n      organiser,\n      collaboratingEntitites,\n      category,\n      tagsTopic,\n      tagsFormat,\n      description,\n      authorship\n    };\n    console.log(project);\n    return this.service\n      .post(\"/project\", project)\n      .then(proj => {\n        console.log(\"CREATED NEW PROJECT:\");\n        console.log(proj.data);\n      })\n      .catch(error => console.log(error));\n  };\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.uploadImage(this.state.file).then(() => {\n      console.log(\"uploaded image to this space\");\n      console.log(this.state.img_url);\n      this.createProject(\n        this.state.img_url,\n        this.state.title,\n        this.state.subtitle,\n        this.state.date,\n        this.state.context,\n        this.state.organiser,\n        this.state.collaboratingEntitites,\n        this.state.category,\n        this.state.tagsTopic,\n        this.state.tagsFormat,\n        this.state.description,\n        this.state.authorship\n      );\n    });\n  }\n\n  componentDidMount = () => {\n    this.props.newPage();\n  };\n\n  render() {\n    return (\n      <section className=\"form-card\">\n        <div className=\"field\">\n          <form onSubmit={e => this.handleSubmit(e)}>\n            <div className=\"control\">\n              <label className=\"label\">Title</label>\n              <input\n                className=\"input is-primary\"\n                type=\"text\"\n                name=\"title\"\n                onChange={e => this.handleChange(e)}\n                placeholder=\"My Project\"\n              />\n            </div>\n            <div className=\"control\">\n              <label className=\"label\">Subtitle</label>\n              <input\n                className=\"input is-primary\"\n                type=\"text\"\n                name=\"subtitle\"\n                onChange={e => this.handleChange(e)}\n                placeholder=\"My Project subtitle\"\n              />\n            </div>\n            <div className=\"control\">\n              <label className=\"label\">Description</label>\n              <input\n                className=\"input is-primary\"\n                type=\"text\"\n                name=\"description\"\n                onChange={e => this.handleChange(e)}\n                placeholder=\"This is an awesome project\"\n              />\n            </div>\n            <div className=\"control\">\n              <label className=\"label\">Context</label>\n              <input\n                className=\"input is-primary\"\n                type=\"text\"\n                name=\"context\"\n                onChange={e => this.handleChange(e)}\n                placeholder=\"Madrid, Spain\"\n              />\n            </div>\n            <div className=\"control\">\n              <label className=\"label\">Organiser</label>\n              <input\n                className=\"input is-primary\"\n                type=\"text\"\n                name=\"organiser\"\n                onChange={e => this.handleChange(e)}\n                placeholder=\"Madrid, Spain\"\n              />\n            </div>\n            <div className=\"control\">\n              <label className=\"label\">Collaborating entitites</label>\n              <input\n                className=\"input is-primary\"\n                type=\"text\"\n                name=\"collaboratingEntitites\"\n                onChange={e => this.handleChange(e)}\n                placeholder=\"Madrid, Spain\"\n              />\n            </div>\n            <div className=\"control\">\n              <label className=\"label\">Date</label>\n              <input\n                className=\"input is-primary\"\n                type=\"date\"\n                name=\"date\"\n                onChange={e => this.handleChange(e)}\n              />\n            </div>\n            <div className=\"control\">\n              <label className=\"label\">Tags (topic)</label>\n              <input\n                className=\"input is-primary\"\n                type=\"text\"\n                name=\"tagsTopic\"\n                onChange={e => this.handleChange(e)}\n                placeholder=\"Enter comma-separated tags\"\n              />\n            </div>\n            <div className=\"control\">\n              <label className=\"label\">Tags (format)</label>\n              <input\n                className=\"input is-primary\"\n                type=\"text\"\n                name=\"tagsFormat\"\n                onChange={e => this.handleChange(e)}\n                placeholder=\"Enter comma-separated tags\"\n              />\n            </div>\n            <div className=\"control\">\n              <label className=\"label\">Category</label>\n              <select name=\"category\" onChange={e => this.handleChange(e)}>\n                <option value=\"RESEARCH\">Research</option>\n                <option value=\"CURATING\">Curating</option>\n                <option value=\"TRASLATION\">Traslation</option>\n              </select>\n            </div>\n            <div className=\"control\">\n              <label className=\"label\">Authorship</label>\n              <select name=\"category\" onChange={e => this.handleChange(e)}>\n                <option value=\"INDIVIDUAL\">Individual</option>\n                <option value=\"COLLECTIVE\">Collective</option>\n              </select>\n            </div>\n            <div className=\"control\">\n              <label className=\"file-label\">Cover image</label>\n              <input\n                className=\"file-input\"\n                name=\"coverImage\"\n                type=\"file\"\n                onChange={e => this.handleChangeFile(e)}\n              />\n            </div>\n            <button className=\"button is-primary\" type=\"submit\">\n              {\" \"}\n              Upload{\" \"}\n            </button>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../css/content.scss\";\nrequire(\"dotenv\").config();\n\nexport default class Projects extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedInUser: null\n    };\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/api`\n    });\n    this.getProjects();\n    \n  }\n\n  componentDidMount = () => {\n    this.props.newPage();\n  }\n\n  filterProjects(category) {\n    \n  }\n\n  getProjects = () => {\n    let projects;\n    return this.service\n      .get(\"/project\")\n      .then(projs => {\n        projects = projs.data;\n        console.log(projects);\n        this.setState({ projectArr: projects });\n      })\n      .catch(error => console.log(error));\n\n  }\n\n  render() {\n    let projects  = this.state.projectArr;\n\n    if (projects) {\n      projects.forEach(e => {});\n      return (\n        <section className=\"all-projects\">\n          {projects.map(project => {\n            return (\n              <div key={project._id} className=\"project-in-feed\">\n                <Link to={`/project/${project._id}`}>\n                  <img\n                    className=\"project-img-feed\"\n                    width=\"200px\"\n                    src={project.coverImage}\n                  />\n                </Link>\n              </div>\n            );\n          })}\n        </section>\n      );\n    } else {\n      return (\n        <section className=\"profile-feed\">\n        </section>\n      );\n    }\n\n\n\n\n  }\n}","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nrequire(\"dotenv\").config();\n//import \"../css/project.scss\";\n\nexport default class ProjectDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedInUser: null\n    };\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/api`\n    });\n  }\n\n  getProject = id => {\n    return this.service\n      .get(`/project/${id}`)\n      .then(project => {\n        this.setState({\n          title: project.data.title,\n          subtitle: project.data.subtitle,\n          date: project.data.date,\n          context: project.data.context,\n          category: project.data.category,\n          coverImage: project.data.coverImage,\n          images: project.data.images,\n          tagsTopic: project.data.tagsTopic,\n          tagsFormat: project.data.tagsFormat,\n          description: project.data.description,\n          externalLink: project.data.externalLink,\n          authorship: project.data.authorship\n        });\n      })\n      .then(() => console.log(this.state))\n      .catch(error => console.log(error));\n  };\n\n  componentDidMount = () => {\n    this.props.newPage();\n    let id = this.props.match.params.id;\n    this.setState({ projectID: id });\n    this.getProject(id);\n  };\n\n  render() {\n    let {\n      coverImage,\n      title,\n      subtitle,\n      date,\n      context,\n      category,\n      tagsTopic,\n      tagsFormat,\n      description,\n      authorship\n    } = this.state;\n\n    return (\n      <section className=\"all-projects\">\n        <h1>{title}</h1>\n        <h2>{subtitle}</h2>\n        <h3>{context}</h3>\n        <p>{description}</p>\n        <img height=\"500px\" src={coverImage} alt={title} />\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link, BrowserRouter, NavLink } from \"react-router-dom\";\nimport \"../css/navbar.scss\";\n\nexport default class Footer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null };\n  }\n\n  sendCategory = category => {\n    this.props.newFilter(category);\n  };\n\n  render() {\n    return (\n      <nav className=\"nav-style\" id=\"botom-nav\" role=\"navigation\">\n        <div className=\"nav-width\">\n            {/* <Link className=\"nav-link\" to=\"/research\">Research</Link>\n            <Link className=\"nav-link\" to=\"/curating\">Curating</Link>\n    <Link className=\"nav-link\" to=\"/translation\">Translation</Link> */}\n            <h2 className=\"nav-link\">Site under construction</h2>\n        </div>\n      </nav>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../css/content.scss\";\nrequire(\"dotenv\").config();\n\nexport default class Category extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedInUser: null,\n      category: this.props.category,\n    };\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/api`\n    });\n    this.getProjects(this.props.category);   \n  }\n\n  componentDidMount = () => {\n    this.props.newPage();\n    console.log(this.props.category);\n    this.setState({category: this.props.category});\n    console.log(this.state);\n  }\n\n  filterProjects(category) {\n  }\n\n  getProjects = (category) => {\n    let projects;\n    return this.service\n      .get(`/project/${category}`)\n      .then(projs => {\n        projects = projs.data;\n        console.log(projects);\n        this.setState({ projectArr: projects });\n      })\n      .catch(error => console.log(error));\n\n  }\n\n  render() {\n    let projects  = this.state.projectArr;\n\n    if (projects) {\n      projects.forEach(e => {});\n      return (\n        <section className=\"all-projects\">\n          {projects.map(project => {\n            return (\n              <div key={project._id} className=\"project-in-feed\">\n                <Link to={`/project/${project._id}`}>\n                  <img\n                    className=\"project-img-feed\"\n                    width=\"200px\"\n                    src={project.coverImage}\n                  />\n                </Link>\n              </div>\n            );\n          })}\n        </section>\n      );\n    } else {\n      return (\n        <section className=\"profile-feed\">\n        </section>\n      );\n    }\n\n\n\n\n  }\n}","import React, { Component } from \"react\";\nimport { Switch, Route, BrowserRouter, Router } from \"react-router-dom\";\nimport \"./css/App.scss\";\n\nimport Navbar from \"./components/Navbar\";\nimport LandingAnimation from \"./components/LandingAnimation\";\nimport About from \"./components/About\";\nimport UploadProject from \"./components/UploadProject\";\nimport Projects from \"./components/Projects\";\nimport ProjectDetail from \"./components/ProjectDetail\";\nimport Footer from \"./components/Footer\";\nimport Category from \"./components/Category\";\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      page: \"Home\"\n    };\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <header className=\"header\">\n            <Navbar/>\n          </header>\n          <div className=\"fix-top\"></div>\n          <main>\n              <Switch> \n                <Route key='home' exact path='/' render={() => <LandingAnimation newPage={()=>{this.setState({page:\"Home\"})}}/> }/> \n{/*                 <Route exact path='/about' render={() => <About newPage={()=>{this.setState({page:\"About\"})}}/> }/>  \n\n                <Route exact path='/curating' render={() => <Category category={'curating'} newPage={()=>{this.setState({page:\"Curating\"})}}/> }/> \n                <Route exact path='/translation' render={() => <Category category={'translation'} newPage={()=>{this.setState({page:\"Translation\"})}}/> }/> \n                <Route exact path='/research' render={() => <Category category={'research'} newPage={()=>{this.setState({page:\"Research\"})}}/> }/> \n\n                <Route exact path='/upload' render={() => <UploadProject newPage={()=>{this.setState({page:\"Upload\"})}}/> }/>  \n                <Route exact path='/projects' render={() => <Projects newPage={()=>{this.setState({page:\"Projects\"})}} /> }/>  \n    <Route path='/project/:id' render={(props) => <ProjectDetail newPage={()=>{this.setState({page:\"ProjectDetail\"})}}{...props}/> }/>   */}\n              </Switch>\n          </main>\n          <div className=\"fix-bottom\"></div>\n          <footer>\n            <Footer/>\n          </footer>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.scss';\nimport App from './App';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}